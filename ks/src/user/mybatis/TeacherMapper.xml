<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="user.dao.TeacherMapper">
	<resultMap id="BaseResultMap" type="user.entity.Teacher">
            <result column="teacher_id" property="teacherId" />
	        <result column="name" property="name" />
	        <result column="sex" property="sex" />
	        <result column="protitle" property="protitle" />
	        <result column="phone" property="phone" />
	        <result column="user_id" property="userId" />
		</resultMap>  
    
    <!-- 表字段 -->
    <sql id="baseColumns">
         t.teacher_id
        , t.name
        , t.sex
        , t.protitle
        , t.phone
        , t.user_id
        </sql> 
    
    <!-- 查询全部 -->
    <select id="listAll" resultMap="BaseResultMap">
		SELECT         
        	<include refid="baseColumns" />
		FROM teacher t
		where teacher_id !=0;
	</select>
    <select id="listAllTeachers" resultMap="BaseResultMap">
        select
            <include refid="baseColumns"/>
        from teacher t
        where teacher_id in (select teacher_id from tc where course_id=#{courseId})
    </select>

    <select id="listAllExcept" resultMap="BaseResultMap">
        select
        <include refid="baseColumns"/>
        from teacher t
        where teacher_id not in (select teacher_id from tc where course_id=#{courseId})
    </select>

 	<!-- 根据主键获取单条记录 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="String">
		SELECT         
        	<include refid="baseColumns" />
		FROM teacher t
		WHERE user_id = #{userId}
	</select>
    <select id="getByteacherId" resultMap="BaseResultMap" parameterType="String">
        SELECT
        <include refid="baseColumns" />
        FROM teacher t
        WHERE teacher_id = #{teacherId}
    </select>
    <select id="getByName" resultMap="BaseResultMap" parameterType="String">
        SELECT
        <include refid="baseColumns" />
        FROM teacher t
        WHERE name = #{name}
    </select>

	<!-- 插入全部字段 -->
    <insert id="insert" parameterType="user.entity.Teacher"
		keyProperty="teacherId" keyColumn="teacher_id" useGeneratedKeys="true"
    >
	INSERT INTO teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">	 
        	    	teacher_id,
    	        	    	name,
    	        	    	sex,
    	        	    	protitle,
    	        	    	phone,
    	        	    	user_id,
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">            
        	        #{teacherId},                   
    	        	        #{name},                   
    	        	        #{sex},                   
    	        	        #{protitle},                   
    	        	        #{phone},                   
    	        	        #{userId},                   
    </trim>
	</insert>
    
    <!-- 插入不为NULL的字段 -->
    <insert id="insertIgnoreNull" parameterType="user.entity.Teacher"
        keyProperty="teacherId" keyColumn="teacher_id" useGeneratedKeys="true"
        >
        INSERT INTO teacher    
        <trim prefix="(" suffix=")" suffixOverrides=",">	 

            <if test="teacherId != null">
                   teacher_id,
            </if>
            <if test="name != null">
                   name,
            </if>
            <if test="sex != null">
                   sex,
            </if>
            <if test="protitle != null">
                   protitle,
            </if>
            <if test="phone != null">
                   phone,
            </if>
            <if test="userId != null">
                   user_id,
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">            
            <if test="teacherId != null" >
                    #{teacherId},                    
            </if>
            <if test="name != null" >
                    #{name},                    
            </if>
            <if test="sex != null" >
                    #{sex},                    
            </if>
            <if test="protitle != null" >
                    #{protitle},                    
            </if>
            <if test="phone != null" >
                    #{phone},                    
            </if>
            <if test="userId != null" >
                    #{userId},                    
            </if>
        </trim>
    </insert>

	<!-- 更新,更新全部字段 -->
    <update id="update" parameterType="user.entity.Teacher">
    UPDATE teacher
     <set>
     		teacher_id = #{teacherId}
            ,name=#{name},
            sex=#{sex},
            protitle=#{protitle},
            phone=#{phone},
     </set>
    WHERE user_id=#{userId}
    </update>  
    
    
    <!-- 更新不为NULL的字段 -->
    <update id="updateIgnoreNull" parameterType="user.entity.Teacher">
    UPDATE teacher
    <set>
        <if test="name != null" >
                name=#{name},                 
        </if>
        <if test="sex != null" >
                sex=#{sex},                 
        </if>
        <if test="protitle != null" >
                protitle=#{protitle},                 
        </if>
        <if test="phone != null" >
                phone=#{phone},                 
        </if>
        <if test="userId != null" >
                user_id=#{userId},                 
        </if>
    </set>
    WHERE teacher_id = #{teacherId}
    </update>

		
	<!-- 根据主键删除记录 -->
	<delete id="delete" parameterType="user.entity.Teacher">
		UPDATE teacher
		SET is_deleted=1
		WHERE teacher_id = #{teacherId}
	</delete>


</mapper>