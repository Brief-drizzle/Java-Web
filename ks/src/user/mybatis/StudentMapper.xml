<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="user.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="user.entity.Student">
        <result column="student_id" property="studentId" />
        <result column="name" property="name" />
        <result column="sex" property="sex" />
        <result column="major" property="major" />
        <result column="class" property="classes" />
        <result column="user_id" property="userId" />
    </resultMap>

    <!-- 表字段 -->
    <sql id="baseColumns">
        t.student_id
        , t.name
        , t.sex
        , t.major
        , t.class
        , t.user_id
    </sql>

    <!-- 查询全部 -->
    <select id="listAll" resultMap="BaseResultMap">
        SELECT
        <include refid="baseColumns" />
        FROM student t
    </select>
    <select id="listAllExcept" resultMap="BaseResultMap">
        SELECT
        <include refid="baseColumns" />
        FROM student t
        where student_id not in (select student_id from sc where course_id=#{courseid})
    </select>

    <!-- 根据主键获取单条记录 -->
    <select id="getById" resultMap="BaseResultMap" parameterType="String">
        SELECT
        <include refid="baseColumns" />
        FROM student t
        WHERE student_id=#{stuid}
    </select>
    <select id="getByUserid" resultMap="BaseResultMap" parameterType="String">
        SELECT
        <include refid="baseColumns" />
        FROM student t
        WHERE user_id = #{userid}
    </select>
    <select id="getByName" resultMap="BaseResultMap" parameterType="String">
        SELECT
        <include refid="baseColumns" />
        FROM student t
        WHERE name = #{stuname}
    </select>

    <!-- 插入全部字段 -->
    <insert id="insert" parameterType="user.entity.Student"
            keyProperty="studentId" keyColumn="student_id" useGeneratedKeys="true"
    >
        INSERT INTO student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            student_id,
            name,
            sex,
            major,
            class,
            user_id,
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{studentId},
            #{name},
            #{sex},
            #{major},
            #{class},
            #{userId},
        </trim>
    </insert>

    <!-- 插入不为NULL的字段 -->
    <insert id="insertIgnoreNull" parameterType="user.entity.Student"
            keyProperty="studentId" keyColumn="student_id" useGeneratedKeys="true"
    >
        INSERT INTO student
        <trim prefix="(" suffix=")" suffixOverrides=",">

            <if test="studentId != null">
                student_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="class != null">
                class,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="studentId != null" >
                #{studentId},
            </if>
            <if test="name != null" >
                #{name},
            </if>
            <if test="sex != null" >
                #{sex},
            </if>
            <if test="major != null" >
                #{major},
            </if>
            <if test="class != null" >
                #{class},
            </if>
            <if test="userId != null" >
                #{userId},
            </if>
        </trim>
    </insert>

    <!-- 更新,更新全部字段 -->
    <update id="update" parameterType="user.entity.Student">
        UPDATE student
        <set>
            name=#{name},
            sex=#{sex},
            major=#{major},
            class=#{class},
            user_id=#{userId},
        </set>
        WHERE student_id = #{studentId}
    </update>


    <!-- 更新不为NULL的字段 -->
    <update id="updateIgnoreNull" parameterType="user.entity.Student">
        UPDATE student
        <set>
            <if test="name != null" >
                name=#{name},
            </if>
            <if test="sex != null" >
                sex=#{sex},
            </if>
            <if test="major != null" >
                major=#{major},
            </if>
            <if test="class != null" >
                class=#{class},
            </if>
            <if test="userId != null" >
                user_id=#{userId},
            </if>
        </set>
        WHERE student_id = #{studentId}
    </update>


    <!-- 根据主键删除记录 -->
    <delete id="delete" parameterType="user.entity.Student">
		UPDATE student
		SET is_deleted=1
		WHERE student_id = #{studentId}
	</delete>


</mapper>